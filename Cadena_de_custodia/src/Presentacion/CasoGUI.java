/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import DAO.CasoEvidencia;
import DAO.Evidencia;
import DAO.EvidenciaFisica;
import DAO.Info;
import Logica.CasoLog;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author javier
 */
public class CasoGUI extends javax.swing.JFrame {

    private String refCaso;
    private int idPersona;
    private String rol;

    private CasoLog casolog;
    private int idCaso;

    private EvidenciaFisicaGUI evFisica;
    private EvidenciaGenericaGUI evGenerica;
    private AnalisisGUI analisisGUI;
    private ListaAnalisisGUI listaAnalisisGUI;
    private PeritosGUI peritosGUI;

    private EvidenciaFisica objEvidenciaFisica;
    private Evidencia objEvidencia;

    private int tipoEvidenciaCombo;

    private Info info;

    private int selRow;

    /**
     * Creates new form Caso
     */
    public CasoGUI(String refCaso, int idPersona, String rol) {
        this.refCaso = refCaso;
        this.idPersona = idPersona;
        this.rol = rol;
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        iniciar();
    }

    private void iniciar() {
        casolog = new CasoLog();
        idCaso = casolog.getIdCaso(refCaso);

        lblCaso.setText("Caso: " + refCaso);
        jLabel3.setText("Rol: " + rol);

        info = new Info();

        String fila[];
//        DefaultTableModel model = new DefaultTableModel();
//        tblEvidencia.setModel(model);
        DefaultTableModel model = (DefaultTableModel) tblEvidencia.getModel();

        for (CasoEvidencia evidencia : casolog.listarEvidenciaCaso(idCaso)) {
            fila = new String[5];
            //TODO: LLenar tabla 
            fila[0] = evidencia.getIdEv() + "";
            fila[1] = evidencia.getReferencia();
            fila[2] = evidencia.getNombre();
            fila[3] = evidencia.getTotalAnalisis() + "";
            fila[4] = evidencia.perito();

            model.addRow(fila);
        }
    }

    private void addEvidencia(int id, String ref, String nombre, String tot, String perito) {
        DefaultTableModel model = (DefaultTableModel) tblEvidencia.getModel();

        String fila[] = new String[5];
        fila[0] = id + "";
        fila[1] = ref;
        fila[2] = nombre;
        fila[3] = tot;
        fila[4] = perito;
        model.addRow(fila);
        tblEvidencia.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCaso = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvidencia = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        comboEvidencia = new javax.swing.JComboBox<>();
        btnAnalizar = new javax.swing.JButton();
        lblPeritos = new javax.swing.JLabel();
        btnPeritos = new javax.swing.JButton();
        btnInforme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblCaso.setText("Caso:");

        jLabel2.setText("Usuario:");

        jLabel3.setText("Rol:");

        tblEvidencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ref", "Evidencia", "# Analisis", "Último análisis"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEvidencia);

        jLabel4.setText("EVIDENCIA");

        btnAgregar.setText("Agregar Evidencia");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        comboEvidencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Evidencia Generica", "Evidencia Fisica" }));

        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        lblPeritos.setText("Peritos:");

        btnPeritos.setText("Gestionar Peritos");
        btnPeritos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeritosActionPerformed(evt);
            }
        });

        btnInforme.setText("Informe");
        btnInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInformeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCaso)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPeritos)
                        .addGap(90, 90, 90)
                        .addComponent(btnPeritos, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(214, 214, 214))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboEvidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInforme)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCaso)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblPeritos)
                    .addComponent(btnPeritos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(comboEvidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAnalizar)
                        .addGap(4, 4, 4))
                    .addComponent(btnInforme, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        tipoEvidenciaCombo = comboEvidencia.getSelectedIndex();

        info.setIdCaso(idCaso);
        info.setIdPersona(idPersona);
        info.setCasoRef(refCaso);

        if (tipoEvidenciaCombo == 0) {
            agregarEvidenciaGenerica();
        } else {
            agregarEvidenciaFisica();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed

        selRow = 0;
        selRow = tblEvidencia.getSelectedRow();
        int id;
        try {
            id = Integer.parseInt((String) tblEvidencia.getValueAt(selRow, 0));
        } catch (Exception e) {
            System.out.println("No hay filas seleccionadas");
            return;
        }

        info = new Info();
        info.setIdCaso(casolog.getIdCaso(refCaso));
        info.setIdPersona(idPersona);
        info.setCasoRef(refCaso);
        info.setIdEvidencia(id);
        info.setEvidenciaRef((String) tblEvidencia.getValueAt(selRow, 1));
        info.setEvidenciaNombre((String) tblEvidencia.getValueAt(selRow, 2));

        analizarEvidencia();
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void btnPeritosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeritosActionPerformed
        // TODO add your handling code here:
        this.show(false);
        peritosGUI = new PeritosGUI(1, idCaso, idPersona);
        peritosGUI.show();
        peritosGUI.addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent e) {
            }

            public void windowClosing(WindowEvent e) {
            }

            public void windowClosed(WindowEvent e) {
                actualizarPeritos();
            }

            public void windowIconified(WindowEvent e) {
            }

            public void windowDeiconified(WindowEvent e) {
            }

            public void windowActivated(WindowEvent e) {
            }

            public void windowDeactivated(WindowEvent e) {
            }
        });
    }//GEN-LAST:event_btnPeritosActionPerformed

    private void btnInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInformeActionPerformed
        // TODO add your handling code here:
        //Realizar informe con idCaso
        //Listar evidencia, analisis, y detalle de todo
        
    }//GEN-LAST:event_btnInformeActionPerformed

    private void revisar(int idEvidencia){
        this.show(false);
        listaAnalisisGUI = new ListaAnalisisGUI(idEvidencia);
        listaAnalisisGUI.show();
        listaAnalisisGUI.addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent e) {
            }

            public void windowClosing(WindowEvent e) {
            }

            public void windowClosed(WindowEvent e) {
                abrir();
            }

            public void windowIconified(WindowEvent e) {
            }

            public void windowDeiconified(WindowEvent e) {
            }

            public void windowActivated(WindowEvent e) {
            }

            public void windowDeactivated(WindowEvent e) {
            }
        });
    }
    
    private void agregarEvidenciaGenerica() {
        this.show(false);
        evGenerica = new EvidenciaGenericaGUI(info);
        evGenerica.show();
        evGenerica.addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent e) {
            }

            public void windowClosing(WindowEvent e) {
            }

            public void windowClosed(WindowEvent e) {
                cerrarEvidenciaGUI();
            }

            public void windowIconified(WindowEvent e) {
            }

            public void windowDeiconified(WindowEvent e) {
            }

            public void windowActivated(WindowEvent e) {
            }

            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    private void agregarEvidenciaFisica() {
        this.show(false);
        evFisica = new EvidenciaFisicaGUI(info);
        evFisica.show();
        evFisica.addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent e) {
            }

            public void windowClosing(WindowEvent e) {
            }

            public void windowClosed(WindowEvent e) {
                cerrarEvidenciaGUI();
            }

            public void windowIconified(WindowEvent e) {
            }

            public void windowDeiconified(WindowEvent e) {
            }

            public void windowActivated(WindowEvent e) {
            }

            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    private void cerrarEvidenciaGUI() {
        if (tipoEvidenciaCombo == 0) {
            objEvidencia = evGenerica.getNewEvidencia();
            if (objEvidencia != null) {
                addEvidencia(objEvidencia.getId(), objEvidencia.getReferencia(), objEvidencia.getNombre(), "0", "");
            }
        } else {
            objEvidenciaFisica = evFisica.getNewEvidencia();
            if (objEvidenciaFisica != null) {
                addEvidencia(objEvidencia.getId(), objEvidenciaFisica.getReferencia(), objEvidenciaFisica.getNombre(), "0", "");
            }
        }
        this.show();
    }

    private void analizarEvidencia() {
        this.show(false);
        analisisGUI = new AnalisisGUI(info);
        analisisGUI.show();
        analisisGUI.addWindowListener(new WindowListener() {
            public void windowOpened(WindowEvent e) {
            }

            public void windowClosing(WindowEvent e) {
            }

            public void windowClosed(WindowEvent e) {
                actualizarDesdeAnalisis();
            }

            public void windowIconified(WindowEvent e) {
            }

            public void windowDeiconified(WindowEvent e) {
            }

            public void windowActivated(WindowEvent e) {
            }

            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    private void actualizarDesdeAnalisis() {
        if (analisisGUI.getAnalisislog().getObjAnalisis() != null) {
            //TODO: agregar analisis nuevo a tabla o aumentar contador de evidencia y perito
            DefaultTableModel model = (DefaultTableModel) tblEvidencia.getModel();
            int analisis = Integer.parseInt((String) model.getValueAt(selRow, 3));
            model.setValueAt((analisis + 1) + "", selRow, 3);
        }
        this.show();
    }

    private void actualizarPeritos() {

        this.show();
    }
    
    private void abrir(){
        this.show();
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Caso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Caso().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnInforme;
    private javax.swing.JButton btnPeritos;
    private javax.swing.JComboBox<String> comboEvidencia;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCaso;
    private javax.swing.JLabel lblPeritos;
    private javax.swing.JTable tblEvidencia;
    // End of variables declaration//GEN-END:variables
}
